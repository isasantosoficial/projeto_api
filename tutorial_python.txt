TUTORIAL PYTHON:

1. Instalação do Python:
   - Acesse o site oficial do Python (python.org) e faça o download da versão mais recente.
   - Siga as instruções de instalação para o seu sistema operacional.
   - Verifique se a instalação foi bem-sucedida digitando "python" no terminal ou prompt de comando. Você deve ver a versão instalada sendo exibida.

2. Primeiro programa em Python:
   Abra seu editor de texto favorito (como Sublime Text, Visual Studio Code ou IDLE).
   
   Escreva o seguinte código:

```python
print("Olá, mundo!")
```

Salve o arquivo com a extensão ".py" (por exemplo, "meu_programa.py").

3. Executando seu programa:
   Abra o terminal ou prompt de comando e navegue até a pasta onde você salvou seu arquivo .py.
   
   Digite `python meu_programa.py` e pressione Enter.
   
   Você deverá ver a mensagem "Olá, mundo!" sendo exibida na tela.

4. Conceitos básicos:
- Variáveis: Use `=` para atribuir um valor a uma variável. Exemplo: `nome = "João"`
- Tipos de dados: Python possui vários tipos embutidos como inteiros (`int`), números decimais (`float`), strings (`str`) e booleanos (`bool`). Exemplo: `idade = 25`
- Operadores aritméticos: Use os operadores `+`, `-`, `*`, `/` para fazer cálculos básicos.
- Estruturas condicionais: Use os blocos if/else para executar diferentes trechos de código com base em condições. Exemplo:

```python
if idade >= 18:
    print("Você é maior de idade.")
else:
    print("Você é menor de idade.")
```

O QUE É PYTHON?

Python é uma linguagem de programação popular conhecida pela sua simplicidade
e legibilidade. É amplamente usado em desenvolvimento web, análise de dados,
 automação e muitas outras áreas.

PASSO A PASSO FAZER O DOWNLOAD, PASSO 1, PASSO 2, PASSO 3:

Passo 1: Acesse o site oficial do Python
Vá para o site oficial do Python em python.org. 

Passo 2: Escolha a versão correta
Na página inicial, você verá duas opções de download: "Python 2.x" e "Python 3.x".
É recomendado escolher a versão mais recente, ou seja, a versão 3.x.

Passo 3: Baixe e instale o Python
Após escolher a versão correta, clique no botão de download correspondente ao seu sistema operacional (por exemplo, Windows, macOS ou Linux).
Em seguida, siga as instruções fornecidas para completar a instalação.

PASSO A PASSO DE INSTALAÇÃO:

Passo 1: Acesse o site oficial do Python em python.org e clique na opção "Downloads" no menu superior.

Passo 2: Na página de downloads, você verá várias versões disponíveis para diferentes sistemas operacionais.
Escolha a versão mais recente compatível com o seu sistema operacional (Windows, macOS ou Linux). Se você não tiver certeza sobre qual versão escolher, opte pela recomendada.

Passo 3: Após selecionar a versão desejada, role para baixo até encontrar os arquivos de instalação. 
Clique no link correspondente ao instalador adequado para o seu sistema (por exemplo, "Windows x86-64 executable installer" para sistemas Windows de 64 bits).

Passo 4: Após baixar o instalador, execute-o clicando duas vezes no arquivo baixado. No Windows, pode ser necessário confirmar permissões de administrador.

Passo 5: Na tela inicial do instalador, marque a opção "Add Python to PATH" e selecione "Customize installation" se você quiser personalizar as configurações
 ou selecione "Install Now" se preferir as configurações padrão.

Passo 6: Se você escolheu personalizar a instalação nas configurações anteriores, poderá escolher o local onde deseja instalar o Python e quais componentes deseja incluir. 
Para usuários iniciantes, recomenda-se aceitar as configurações padrão.

Passo 7: Aguarde enquanto a instalação é concluída. Isso pode levar alguns minutos.

Passo 8: Após a conclusão da instalação, verifique se ela foi bem-sucedida abrindo um prompt de comando (no Windows) ou um terminal (no macOS/Linux) e digitando
 'python --version'. Você deverá ver uma resposta que mostra a versão do Python que foi instalada.



TUTORIAL VIRTUALENV:

 Instalação:
   Primeiro, você precisa instalar o Virtualenv. Você pode fazer isso executando o seguinte comando no terminal:

   ```
   pip install virtualenv
   ```

2. Criando um ambiente virtual:
   Para criar um ambiente virtual, navegue até a pasta do seu projeto no terminal e execute o seguinte comando:

   ```
   virtualenv nome_do_ambiente
   ```

3. Ativando o ambiente virtual:
   Após criar o ambiente virtual, ative-o com este comando (no Windows):

   ```
    nome_do_ambiente\Scripts\activate
    ```

  No Linux/macOS use este comando:

  ```
  source nome_do_ambiente/bin/activate
  ```

4. Instalando pacotes:
    Com seu ambiente virtual ativado, você pode instalar pacotes Python usando o pip normalmente:

     ```
     pip install nome_do_pacote
     ```

5. Desativar o ambiente:
    Quando terminar de trabalhar com seu projeto e quiser sair do ambiente virtual ativo, execute este comando em qualquer lugar do Terminal.

    ```
    deactivate
    ```

O QUE É O VIRTUALENV:

Virtualenv é uma ferramenta que permite criar ambientes virtuais isolados para desenvolvimento de projetos em Python.
 Isso evita conflitos entre dependências e permite testar diferentes versões de bibliotecas sem afetar o ambiente global.
 Com o virtualenv, é possível ter um ambiente Python limpo e personalizado para cada projeto.
 
PASSO A PASSO FAZER DOWNLOAD DO VIRTUALENV, PASSO 1, PASSO 2, PASSO 3:

Passo 1: Instale o Python
- Antes de instalar o Virtualenv, você precisa ter o Python instalado em seu sistema. Verifique se você já tem o Python instalado executando `python --version` ou `python3 --version` no terminal. Se não estiver instalado, baixe e instale a versão mais recente do Python no site oficial (https://www.python.org/downloads/).

Passo 2: Instale o pip
- O pip é um gerenciador de pacotes do Python necessário para instalar bibliotecas externas e ferramentas como o Virtualenv. Verifique se você já tem o pip instalado executando `pip --version` ou `pip3 --version` no terminal. Se não estiver instalado, siga as instruções na documentação oficial do Python para instalar (https://pip.pypa.io/en/stable/installing/).

Passo 3: Instale o Virtualenv
- Depois de ter o pip instalado, você pode usar esse mesmo comando para instalar virtualenv. Abra seu terminal e execute:
```
pip install virtualenv
```
ou 
```
pip3 install virtualenv
```

PASSO A PASSO DA INSTALAÇÃO DO VIRTUALENV:

1. Certifique-se de ter o Python instalado em seu sistema. Você pode verificar isso digitando "python --version" no terminal ou prompt de comando.

2. Abra o terminal ou prompt de comando e execute o seguinte comando para instalar o virtualenv através do pip (gerenciador de pacotes do Python):

   `pip install virtualenv`

   Nota: Se você estiver usando uma versão mais recente do Python (3.4+), você pode usar `pip3 install virtualenv` em vez disso.

3. Após a conclusão da instalação, crie um novo ambiente virtual com o seguinte comando:

   `virtualenv nome_do_ambiente`

   Substitua "nome_do_ambiente" pelo nome que você deseja dar ao seu ambiente.

4. Ative o ambiente virtual executando o seguinte comando:

   - No Windows:
     `nome_do_ambiente\Scripts\activate.bat`

   - No Linux/Mac:
     `source nome_do_ambiente/bin/activate`

5. Agora você está dentro do seu ambiente virtual e pode instalar pacotes específicos apenas para esse ambiente usando pip.

6. Para desativar o ambiente virtual, execute este comando:

   `deactivate`


TUTORIAL DO FLASK:

Aqui estão os passos básicos para começar com o Flask:

1. Instalação: Certifique-se de ter o Python instalado no seu sistema. Em seguida, você pode instalar o Flask executando o seguinte comando no terminal:
```
pip install flask
```

2. Importação: Após a instalação, importe as classes necessárias do Flask no seu arquivo Python:
```python
from flask import Flask, render_template, request
```

3. Configuração da aplicação: Crie uma instância da classe `Flask` e defina algumas configurações básicas:
```python
app = Flask(__name__)
app.config['DEBUG'] = True
```

4. Rotas e views: Crie rotas para lidar com diferentes URLs na sua aplicação usando decoradores `@app.route`. Isso define qual função será executada quando uma determinada URL for acessada:
```python
@app.route('/')
def index():
    return 'Hello World!'
```

5. Templates: O Flask usa templates Jinja2 para criar páginas HTML dinamicamente. Você pode usar esses templates em conjunto com a função `render_template` para retornar páginas HTML ao invés de apenas texto.
```python
@app.route('/')
def index():
    return render_template('index.html')
```
Certifique-se de criar um diretório chamado "templates" na pasta raiz do seu projeto e colocar seus arquivos HTML lá.

6. Recebendo dados dos formulários: Você pode receber dados enviados pelos usuários através de formulários usando a classe `request`. Por exemplo, se você tiver um formulário que envia dados através do método POST, você pode acessá-los assim:
```python
@app.route('/login', methods=['POST'])
def login():
    username = request.form['username']
    password = request.form['password']
    # faça algo com os dados recebidos...
```

O QUE É FLASK:

O Flask é um framework web em Python usado para construir aplicativos web.
É conhecido por ser simples e fácil de aprender,
tornando-o popular entre os desenvolvedores.

PASSO A PASSO FAZER DOWNLOAD DO FLASK, PASSO 1, PASSO 2, PASSO 3:

Passo 1: Abra o prompt de comando ou terminal no seu sistema operacional.

Passo 2: Digite o seguinte comando e pressione Enter para instalar o Flask usando o pip (gerenciador de pacotes do Python):

   ```
   pip install flask
   ```

    O pip irá baixar e instalar automaticamente a última versão do Flask disponível.

Passo 3: Aguarde até que a instalação esteja concluída. Você verá uma mensagem informando que a instalação foi bem-sucedida.

PASSO A PASSO DA INSTALAÇÃO DO FLASK:

Passo 1: Certifique-se de ter o Python instalado no seu sistema. O Flask é uma estrutura em Python, então você precisará ter o Python instalado antes de poder instalar o Flask. Você pode verificar se você tem o Python instalado digitando "python --version" no terminal ou prompt de comando.

Passo 2: Abra um terminal ou prompt de comando e digite o seguinte comando para instalar o Flask usando pip (gerenciador de pacotes do Python):

```
pip install flask
```

O pip irá baixar e instalar todos os pacotes necessários para executar o Flask.

Passo 3: Após a conclusão da instalação, você pode testar se tudo foi configurado corretamente importando o módulo do Flask em um arquivo python:

```python
from flask import Flask

app = Flask(__name__)
```

Se não houver erros ao importar, significa que a instalação foi bem-sucedida.

Em seguida, você pode começar a criar seu aplicativo web com base no Flask. Existem muitos recursos online e tutoriais que podem ajudá-lo com isso.

